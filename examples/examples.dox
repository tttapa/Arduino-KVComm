/**
 * @example   "SLIP-Receive.ino"
 * 
 * SLIP-Receive
 * ============
 *
 * Receives SLIP packages over Serial.
 * 
 * @boards  AVR, AVR USB, Nano Every, Nano 33, Due, Teensy 3.x, ESP8266, ESP32
 * 
 * @see     @ref SLIP-Send.ino
 * 
 * Written by PieterP, 2020-02-06  
 * https://github.com/tttapa/Arduino-KVComm
 */

/**
 * @example   "SLIP-Send.ino"
 * 
 * SLIP-Send
 * =========
 *
 * Send a SLIP package over the serial port every 5 seconds.
 * 
 * @boards  AVR, AVR USB, Nano Every, Nano 33, Due, Teensy 3.x, ESP8266, ESP32
 * 
 * 1. Upload this sketch to one Arduino.
 * 2. Upload the @ref SLIP-Receive.ino sketch to a second Arduino.
 * 3. Connect the TX pin of this Arduino to the RX pin of the second Arduino.
 * 4. Open the Serial monitor of the second Arduino.
 * 
 * It should print the following:
 * 
 *     Received packet: 
 *     Hello, world!
 * 
 * For boards where `Serial` is not a hardware UART, use `Serial1` as the stream
 * for the SLIPStream.
 * 
 * Written by PieterP, 2020-02-06  
 * https://github.com/tttapa/Arduino-KVComm
 */

/**
 * @example   "KVComm-Receive.ino"
 * 
 * KVComm-Receive
 * ==============
 *
 * Receives SLIP packages containing a KV dictionary and print the keys and 
 * values.
 *
 * @boards  AVR, AVR USB, Nano Every, Nano 33, Due, Teensy 3.x, ESP8266, ESP32
 * 
 * @see     @ref KVComm-Send.ino
 *
 * Written by PieterP, 2020-02-08  
 * https://github.com/tttapa/Arduino-KVComm
*/

/**
 * @example   "KVComm-Send.ino"
 * 
 * KVComm-Send
 * ===========
 *
 * Send a SLIP package with a dictionary of key-value pairs over the serial port
 * every 5 seconds.
 * 
 * @boards  AVR, AVR USB, Nano Every, Nano 33, Due, Teensy 3.x, ESP8266, ESP32
 * 
 * 1. Upload this sketch to one Arduino.
 * 2. Upload the @ref KVComm-Receive.ino sketch to a second Arduino.
 * 3. Connect the TX pin of this Arduino to the RX pin of the second Arduino.
 * 4. Open the Serial monitor of the second Arduino.
 * 
 * It should print the following:
 * 
 *     ====================
 *     
 *     abc:
 *       1, 2, 3
 *     
 *     password:
 *       qwerty123
 *     
 *     analog0:
 *       777
 *     
 *     seconds:
 *       12.07
 *     
 *     ====================
 * 
 * For boards where `Serial` is not a hardware UART, use `Serial1` as the stream
 * for the SLIPStream.
 * 
 * Written by PieterP, 2020-02-08  
 * https://github.com/tttapa/Arduino-KVComm
 */

/**
 * @example   "SLIP-Send-CRC.ino"
 * 
 * SLIP-Send-CRC
 * =============
 *
 * Send a SLIP package over the serial port every 5 seconds.
 * 
 * @boards  AVR, AVR USB, Nano Every, Nano 33, Due, Teensy 3.x, ESP8266, ESP32
 * 
 * 1. Upload this sketch to one Arduino.
 * 2. Upload the @ref SLIP-Receive-CRC.ino sketch to a second Arduino.
 * 3. Connect the TX pin of this Arduino to the RX pin of the second Arduino.
 * 4. Open the Serial monitor of the second Arduino.
 * 
 * It should print the following:
 * 
 *     Received packet: Hello, world!
 *     Size:            OK
 *     Checksum:        OK
 * 
 * For boards where `Serial` is not a hardware UART, use `Serial1` as the stream
 * for the SLIPStream.
 * 
 * Written by PieterP, 2020-02-07  
 * https://github.com/tttapa/Arduino-KVComm
 */

/**
 * @example   "SLIP-Receive-CRC.ino"
 * 
 * SLIP-Receive-CRC
 * ================
 *
 * Receives SLIP packages with a CRC checksum over Serial.
 *
 * @boards  AVR, AVR USB, Nano Every, Nano 33, Due, Teensy 3.x, ESP8266, ESP32
 *
 * @see     @ref SLIP-Send-CRC.ino
 *
 * Written by PieterP, 2020-02-06  
 * https://github.com/tttapa/Arduino-KVComm
 */

